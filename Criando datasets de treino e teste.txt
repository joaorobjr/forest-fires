library(dplyr)
library(caret)
library(naivebayes)
#generate the same datasets in any computer
set.seed(123)
#generate randomly a dataset
lines <- createDataPartition(y=fires.raw$cause_type,p=.7,list=FALSE)
#divide into two datasets
fires.raw_train <- fires.raw %>% slice(lines)
fires.raw_test <- fires.raw %>% slice(-lines)



#creating a model of decision tree
library(rpart)
#using cause_type variable in function of the all others and with high complexity
modelo <- rpart(cause_type ~., data = fires.raw_train, control = rpart.control(cp=0))

#predicting
fires.raw_test$Previsão <-predict(modelo, fires.raw_test)
view(fires.raw_test)


#creating a model of knn
fires.raw_test_causes <- fires.raw_test$cause_type
fires.raw_test <- fires.raw_test %>% select(-cause_type)

#DEPOIS DO TIL TEM DE VIR NUM OU FACTORS
knn.model <- knn3(cause_type ~region + origin + lat + lon,data=fires.raw_train,k=4)

knn.model
#making predictions on data test
knn.preds <- predict(knn.model,fires.raw_test,type="class")

#obtain the confusion matrix
knn.confM <- confusionMatrix(fires.raw_test_causes,knn.preds)
knn.confM

#repeat the process for different k´s